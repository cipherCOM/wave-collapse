{"version":3,"sources":["../src/prio-list.ts"],"sourcesContent":["export class PrioList<T extends ListElement<T>> {\n  private head: ListNode<T> | undefined\n  private prios: number[] = []\n  private prioLookup: Map<number, ListNode<T>> = new Map()\n\n  constructor(private prioAccess: (a: T) => number) {}\n\n  push(item: T) {\n    const node = new ListNode(item)\n    item.listNode = node\n\n    this.insertNodeInPrios(node)\n    if (!this.head || this.head.prev == node) {\n      this.head = node\n    }\n  }\n\n  pop(): T | undefined {\n    if (!this.head) {\n      return undefined\n    }\n    const node = this.head\n    this.removeNodeFromPrios(node, this.prioAccess(node.value))\n    this.head = node.next\n\n    node.value.listNode = undefined\n    return node.value\n  }\n\n  refresh(item: T, oldPriority: number) {\n    if (!item.listNode) {\n      throw new Error('Item is not in the list')\n    }\n    if (this.prioAccess(item) == oldPriority) {\n      return\n    }\n\n    this.removeNodeFromPrios(item.listNode, oldPriority)\n    if (this.head == item.listNode) {\n      this.head = item.listNode.next\n    }\n    this.insertNodeInPrios(item.listNode)\n    if (!this.head || this.head.prev == item.listNode) {\n      this.head = item.listNode\n    }\n  }\n\n  isEmpty() {\n    return !this.head\n  }\n\n  private insertNodeInPrios(node: ListNode<T>) {\n    const prio = this.prioAccess(node.value)\n    let other: ListNode<T> | undefined\n    if ((other = this.prioLookup.get(prio))) {\n      // found the same prio, insert after and update prioLookup\n      if (other.next) other.next.prev = node\n      node.next = other.next\n      node.prev = other\n      other.next = node\n      this.prioLookup.set(prio, node)\n      return\n    }\n\n    // find the prio to insert before\n    let foundIdx: number | undefined\n    for (let [idx, other] of this.prios.entries()) {\n      if (other > prio) {\n        foundIdx = idx\n        break\n      }\n    }\n\n    if (foundIdx === undefined) {\n      // insert at the end\n      const last = this.prioLookup.get(this.prios[this.prios.length - 1])\n      if (last) {\n        last.next = node\n        node.prev = last\n      }\n      this.prios.push(prio)\n      this.prioLookup.set(prio, node)\n      return\n    }\n\n    // insert before the foundIdx\n    other = this.prioLookup.get(this.prios[foundIdx])!\n    if (other.prev) other.prev.next = node\n    node.prev = other.prev\n    node.next = other\n    other.prev = node\n    this.prios.splice(foundIdx, 0, prio)\n    this.prioLookup.set(prio, node)\n  }\n\n  private removeNodeFromPrios(node: ListNode<T>, prio: number) {\n    if (node.prev) node.prev.next = node.next\n    if (node.next) node.next.prev = node.prev\n\n    if (node !== this.prioLookup.get(prio)) {\n      return\n    }\n\n    if (!node.prev || this.prioAccess(node.prev.value) != prio) {\n      // last node with this prio\n      this.prioLookup.delete(prio)\n      this.prios.splice(this.prios.indexOf(prio), 1)\n      return\n    }\n\n    this.prioLookup.set(prio, node.prev)\n  }\n}\n\nexport class ListNode<T extends ListElement<T>> {\n  constructor(\n    public value: T,\n    public prev: ListNode<T> | undefined = undefined,\n    public next: ListNode<T> | undefined = undefined,\n  ) {}\n}\n\nexport type ListElement<T> = {\n  listNode: ListNode<any> | undefined\n}\n"],"mappings":"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","names":["other"]}